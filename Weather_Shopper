# """
# Learn to navigate to Weathershopper web page using selenium

#Steps :

    # Launching Chrome Driver
    # Navigate to Weathershopper page
    # Perform click action on Moisturizer or sunscreens based on temperature
    # Select a least priced product and add to cart
    # Click on pay with card
    # close the browser

from configparser import ConfigParser
from fileinput import filename
from importlib.resources import contents
from selenium import webdriver
from selenium.webdriver.common.by import By
import time
import os

# launching the driver
driver=webdriver.Chrome()
# Maximizing the window
driver.maximize_window()

# driver.get method is navigate to the page of given URL
driver.get("https://weathershopper.pythonanywhere.com/")
# Print the title of page
print(driver.title)
try:
    assert 'Current Temperature' in driver.title
    print("hurrryy!!! page title is correct")
except Exception as e:
    print("oh nooo!!!wrong page title",format(e))

# file = open("config.ini","r")
# config = configparser.RawConfigParser(allow_no_value=True)
# config.read_file(file)
# print(config.get("drivers_config","a"))
# print(config.get("drivers_config","b"))
# print(config.get("drivers_config","c"))
# print(config.get("drivers_config","d"))
# print(config.get("drivers_config","e"))

config_WS = ConfigParser()
config_WS.read("config.ini")
# Locate the button and perform click action
x=config_WS["xpath"]
a=(x["a"])
b=(x["b"])
c=(x["c"])
d=(x["d"])
print(a)
print(b)
print(c)
print(d)

# def config_read():
#     filename = "config.ini"
#     contents=open(filename).read()
#     config=eval(contents)
#     tem=config("tem")
#     moi=config("moi")
#     pri=config("pri")
#     sun=config("sun")
#     print(tem)
#     print(moi)
#     print(pri)
#     print(sun)
#     return(tem,moi,pri,sun)


temp_txt=a
temperature=int((temp_txt.text)[0:2])
print(temperature)

# Creating function for least priced product
def least_priced():
    for item in items:
        print(item)
        item_txt=int((item.text)[-3::])
        price_list.append(item_txt)
    print(price_list)
    mini = str(min(price_list))
    print(mini)
    least_item_text = item.find_element(by=By.XPATH,value ="//p[contains(text(),'"+mini+"')]/following-sibling::button[@class='btn btn-primary']").click()

# Perform click action on Moisturizer if temperature is less than 20°C
if  temperature <= 20 :
    time.sleep(2)
    button=b.click()
    items = c
    price_list = []
    least_priced_item = 1000

# Calling function for least priced product
    least_priced()
    
# Perform click action on Sunscreens if temperature is more than 30°C        
if temperature >= 30 :
    time.sleep(2)
    button=d.click()
    items = c
    price_list = []
    least_priced_item = 1000

# calling function for least priced product    
    least_priced() 
   
# Click cart button
button=driver.find_element(by=By.XPATH,value ="//button[@class='thin-text nav-link']").click()
# Pause the page for 2 seconds
time.sleep(2)
# Click pay with card button
button=driver.find_element(by=By.XPATH,value ="//span[normalize-space()='Pay with Card']").click()
# Pause the page for 3 seconds
time.sleep(3)
# if __name__=="__main__":
#     config_read()
# Close the browser
driver.close()